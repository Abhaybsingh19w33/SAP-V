1
00:00:02,540 --> 00:00:06,700
In this video we are going to discuss
iteration statements,

2
00:00:06,700 --> 00:00:08,110
otherwise known as looping statements.

3
00:00:09,650 --> 00:00:15,120
We use iteration statements to execute a
block of ABAP code multiple times.

4
00:00:17,200 --> 00:00:20,620
So to start off with, I'm going to
generate a new program,

5
00:00:20,620 --> 00:00:23,830
by copying the one we used in the previous
exercise.

6
00:00:25,730 --> 00:00:26,799
And then I'll strip it down.

7
00:00:26,799 --> 00:00:31,466
[BLANK_AUDIO]

8
00:00:31,466 --> 00:00:32,487
So we can start fresh.

9
00:00:32,487 --> 00:00:42,487
[BLANK_AUDIO]

10
00:00:50,949 --> 00:00:56,126
There are various ways to loop through
blocks of code in your app-app program.

11
00:00:56,126 --> 00:00:58,780
And we can separate these types of loops

12
00:00:58,780 --> 00:01:02,960
into those that have conditions attached
to them and those that do not.

13
00:01:04,220 --> 00:01:07,620
Now you've already been using a loop in
the form of the select statement.

14
00:01:07,620 --> 00:01:13,130
And the select statement allows us to
iterate through a record set.

15
00:01:14,510 --> 00:01:20,810
So let's revisit the select statement, and

16
00:01:20,810 --> 00:01:26,350
we've been using it in the form of select
star, which means select every field from

17
00:01:26,350 --> 00:01:29,170
the table, I mean in our case it would be
zed employees.

18
00:01:32,160 --> 00:01:36,050
We would then have some ABAP that we would
loop through; in this case,

19
00:01:36,050 --> 00:01:37,780
let's just do a simple write statement.

20
00:01:41,710 --> 00:01:44,593
By doing this zed employees,

21
00:01:44,593 --> 00:01:49,563
it would output the entire record onto the
screen.

22
00:01:49,563 --> 00:01:54,648
[BLANK_AUDIO]

23
00:01:54,648 --> 00:01:56,950
And then all we need to say is end select.

24
00:01:59,380 --> 00:02:02,400
So as you can see, this is a very simple
loop,

25
00:02:02,400 --> 00:02:06,980
select every field from the table, write
the record to the screen.

26
00:02:09,440 --> 00:02:09,940
It's corrected.

27
00:02:12,690 --> 00:02:17,410
And then we get to the end select which
means we are finished writing our blocker

28
00:02:17,410 --> 00:02:22,550
code, go back to the start until there are
no more records left in the records set.

29
00:02:22,550 --> 00:02:27,010
So let's do a syntax

30
00:02:27,010 --> 00:02:32,010
check, oops we do have an error.

31
00:02:32,010 --> 00:02:33,130
Oh, my apologies.

32
00:02:33,130 --> 00:02:35,545
I missed the table statement at the top.

33
00:02:35,545 --> 00:02:41,791
[BLANK_AUDIO]

34
00:02:41,791 --> 00:02:43,532
Pretty it up.

35
00:02:43,532 --> 00:02:45,597
There we go.

36
00:02:45,597 --> 00:02:49,120
So let's give this program a quick run and
you can see it in action.

37
00:02:51,210 --> 00:02:54,640
As you can see, it's looped through the
entire table and

38
00:02:54,640 --> 00:02:56,750
output the contents to the screen.

39
00:02:56,750 --> 00:02:58,700
A very simple loop.

40
00:02:58,700 --> 00:03:02,890
Now I did mention how our iteration
statements come in two forms,

41
00:03:02,890 --> 00:03:04,320
those with conditions and those without.

42
00:03:04,320 --> 00:03:09,900
Well this is a select statement, a loop
without a condition on it.

43
00:03:11,220 --> 00:03:13,410
But we can add the condition very simply.

44
00:03:15,210 --> 00:03:21,200
In this case, let's extend the first line
of the select statement

45
00:03:21,200 --> 00:03:27,610
to say where surname equals Smith.

46
00:03:27,610 --> 00:03:32,500
So now when the select statement executes,
it will only select records where

47
00:03:32,500 --> 00:03:35,010
the surname is Smith and output them to
the screen.

48
00:03:36,110 --> 00:03:38,890
Let's do a quick check, make sure the code
is correct.

49
00:03:40,980 --> 00:03:44,660
Activate it and then give it a run.

50
00:03:44,660 --> 00:03:45,970
And nothing was output.

51
00:03:45,970 --> 00:03:47,020
Let's have a look at our table.

52
00:03:47,020 --> 00:03:56,354
[BLANK_AUDIO]

53
00:03:56,354 --> 00:03:57,670
Oh, well, look at that.

54
00:03:57,670 --> 00:03:59,570
We got rid of all our Smith records.

55
00:04:01,120 --> 00:04:02,910
Let's use another surname.

56
00:04:04,140 --> 00:04:09,510
Let's choose, we have Jones, our first
one, or Mills in the middle.

57
00:04:09,510 --> 00:04:10,885
Let's choose Mills instead.

58
00:04:10,885 --> 00:04:16,852
[BLANK_AUDIO]

59
00:04:16,852 --> 00:04:18,510
Everything is good.

60
00:04:18,510 --> 00:04:21,120
And there we go, it's output the one
record where the surname is

61
00:04:21,120 --> 00:04:21,690
equal to Mills.

62
00:04:21,690 --> 00:04:28,310
So you can see it's quite easy to add
logic into your select statement.

63
00:04:28,310 --> 00:04:33,870
To limit the number of records you're
going to iterate through.

