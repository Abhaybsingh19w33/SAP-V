1
00:00:01,520 --> 00:00:08,190
As with many of the statements, do loops
can be nested, and if you do nest them,

2
00:00:08,190 --> 00:00:14,860
each do loop will have its own SY index
created and monitored by the system, but

3
00:00:14,860 --> 00:00:19,880
do be aware that when you start nesting do
loops, and other types of loops,

4
00:00:19,880 --> 00:00:23,740
you need to consider how much work you're
going to make the system do.

5
00:00:25,720 --> 00:00:29,580
So let's get straight in and have a look
at an example of how we nest

6
00:00:29,580 --> 00:00:33,790
another do loop inside this one.

7
00:00:33,790 --> 00:00:41,886
So first of all, well I'll leave that
break point on,

8
00:00:41,886 --> 00:00:47,518
and then let's call this outer loop so

9
00:00:47,518 --> 00:00:51,755
we can monitor it properly.

10
00:00:51,755 --> 00:01:00,503
[NOISE] and then lets do our do loop
statements inside.

11
00:01:00,503 --> 00:01:03,253
So we'll do lets say ten times.

12
00:01:03,253 --> 00:01:13,253
[BLANK_AUDIO]

13
00:01:14,461 --> 00:01:16,185
And we will do a similar type of
statement.

14
00:01:16,185 --> 00:01:22,711
We will write out the value of B on its
own line.

15
00:01:22,711 --> 00:01:25,836
I have remembered it this time.

16
00:01:25,836 --> 00:01:27,961
We will call this inter loop.

17
00:01:27,961 --> 00:01:36,670
[BLANK_AUDIO]

18
00:01:36,670 --> 00:01:38,860
Let's just get it all in line.

19
00:01:40,530 --> 00:01:44,336
And don't forget, we need to declare our
variable.

20
00:01:44,336 --> 00:01:54,295
[BLANK_AUDIO]

21
00:01:54,295 --> 00:02:02,242
Now because we have a do loop inside our
original do loop,

22
00:02:02,242 --> 00:02:09,040
let's initialize our variable B at this
point.

23
00:02:11,530 --> 00:02:13,230
Because if we did it up here,

24
00:02:14,320 --> 00:02:18,470
it's value would not be reset every time
we got to the inner do loop.

25
00:02:20,040 --> 00:02:25,680
So by doing it here, we can do this second
do loop ten times.

26
00:02:25,680 --> 00:02:29,290
And then when the first do loop comes
round to it's second iteration,

27
00:02:30,350 --> 00:02:36,780
it gets reset to zero and then it will
count to ten again in the second loop.

28
00:02:36,780 --> 00:02:41,540
And finally, let's just do one more little
thing.

29
00:02:41,540 --> 00:02:49,752
Just to count the total number of loops
that we are processing.

30
00:02:49,752 --> 00:02:54,300
We'll have a variable called c.

31
00:02:54,300 --> 00:02:56,819
Also a type i.
[SOUND]

32
00:02:56,819 --> 00:03:05,593
and at the very end [SOUND]

33
00:03:05,593 --> 00:03:11,734
let's do this,

34
00:03:11,734 --> 00:03:17,876
we'll write out

35
00:03:17,876 --> 00:03:23,586
the value of C.

36
00:03:23,586 --> 00:03:28,882
That so it adds up correctly, what we need
to do,

37
00:03:28,882 --> 00:03:35,879
at the end of each second do loop, is to
let c equal the value of b.

38
00:03:35,879 --> 00:03:41,970
So, once it does ten times the value of b
will be transferred to C.

39
00:03:41,970 --> 00:03:43,330
Watch what we need to do.

40
00:03:43,330 --> 00:03:45,540
C plus B.

41
00:03:45,540 --> 00:03:51,838
So it gets added up every time,

42
00:03:51,838 --> 00:03:56,925
and then at the very end,

43
00:03:56,925 --> 00:04:00,086
we can C plus K.

44
00:04:00,086 --> 00:04:04,712
[BLANK_AUDIO]

45
00:04:04,712 --> 00:04:07,600
So this should be a good counter for us.

46
00:04:07,600 --> 00:04:13,820
To count up how many times the system
loops through both loops.

47
00:04:15,010 --> 00:04:21,310
So, the first loop is 15 times and then in
each loop it loops ten more times.

48
00:04:21,310 --> 00:04:25,680
So we should If my math's correct, have
around about 150 loops.

49
00:04:25,680 --> 00:04:31,400
That's quite a lot of code being executed.

50
00:04:31,400 --> 00:04:34,660
Now, obviously we're using an SAP system
and

51
00:04:34,660 --> 00:04:37,530
it's gonna process this instantaneously.

52
00:04:37,530 --> 00:04:42,970
But, you can imagine if you were
processing through, let's say, 10,000

53
00:04:42,970 --> 00:04:49,126
records at this level, and then you are at
50,000 records at the second level.

54
00:04:49,126 --> 00:04:51,760
And 10,000 times 50,000,

55
00:04:51,760 --> 00:04:56,040
I can't do the math but it would equal a
lot of Iterations.

56
00:04:56,040 --> 00:05:00,660
And it could take quite a long time, so
just be wary of nested loops.

57
00:05:02,320 --> 00:05:04,878
Anyway, let's get on and test our code.

58
00:05:04,878 --> 00:05:10,836
[BLANK_AUDIO]

59
00:05:10,836 --> 00:05:13,921
Our break point is set here at line 22, so

60
00:05:13,921 --> 00:05:18,130
let's just execute it and we'll Bring up
the values of a.

61
00:05:18,130 --> 00:05:20,086
You double click.

62
00:05:20,086 --> 00:05:24,297
Tell you what.

63
00:05:24,297 --> 00:05:27,610
Change that to b, and we'll put c there.

64
00:05:29,680 --> 00:05:32,560
And we will also bring up sy-index at this
point.

65
00:05:32,560 --> 00:05:35,000
And we can see that as a value of 0.

66
00:05:35,000 --> 00:05:40,540
And while we're processing through this
code, keep an eye on sy-index and

67
00:05:40,540 --> 00:05:45,400
notice how the value changes as we go from
the outer loop to the inner loop.

68
00:05:47,540 --> 00:05:50,390
So let's get straight on and step through
the code.

69
00:05:52,830 --> 00:05:55,540
So, our first loop is gonna be done 15
times.

70
00:05:57,350 --> 00:05:59,970
As we step into it, s y index equals one.

71
00:06:02,150 --> 00:06:03,900
We will increment the value of a.

72
00:06:06,240 --> 00:06:07,820
Write out our first statements.

73
00:06:09,390 --> 00:06:11,489
And we can see that b gets initialized.

74
00:06:14,020 --> 00:06:15,880
And now we're gonna step into the second
loop.

75
00:06:18,570 --> 00:06:19,950
SY index is one again.

76
00:06:19,950 --> 00:06:23,620
But because it's the first time we're
going into this second loop.

77
00:06:26,840 --> 00:06:31,970
We don't actually see any change in the
value, but SY index is pointing

78
00:06:31,970 --> 00:06:36,310
at the second loop now, which it's
monitoring this SY index value.

79
00:06:36,310 --> 00:06:37,550
As we step through you'll see it change.

80
00:06:40,800 --> 00:06:43,460
So, B is incremented by one, we write out
the statement,

81
00:06:43,460 --> 00:06:46,450
and now we're into the second.

82
00:06:48,480 --> 00:06:50,250
Iteration of the second loop.

83
00:06:50,250 --> 00:06:51,800
And we can see SY index is equal to.

84
00:06:51,800 --> 00:06:55,045
And that's what we step through.

85
00:06:55,045 --> 00:06:59,711
It should do it ten times.

86
00:06:59,711 --> 00:07:09,128
[BLANK_AUDIO]

87
00:07:09,128 --> 00:07:12,540
So now we're in our tenth iteration of
this inner loop.

88
00:07:18,350 --> 00:07:22,060
Goes back up, registers it's been done ten
times,

89
00:07:24,300 --> 00:07:29,560
jumps straight down to the undo statement,
and then processes the calculation of C.

90
00:07:29,560 --> 00:07:34,120
And then continues on,

91
00:07:34,120 --> 00:07:39,132
in this first iteration of the outer loop.

92
00:07:40,940 --> 00:07:42,180
And we can see the SY.

93
00:07:43,240 --> 00:07:44,040
Wrong one.
Sorry.

94
00:07:44,040 --> 00:07:48,090
And we can see the SY index has been
changed back to one.

95
00:07:51,340 --> 00:07:52,079
You'll carry on.

96
00:07:53,800 --> 00:07:59,340
And now we're in the second loop of our
how to do statement.

97
00:08:03,100 --> 00:08:06,858
And as we jump into our In a loop,

98
00:08:06,858 --> 00:08:11,885
sy-index should be reset to represent the
value of the inner loop,

99
00:08:11,885 --> 00:08:16,859
and so it is.

100
00:08:16,859 --> 00:08:25,211
[NOISE] So to save my fingers all this key
pressing.

101
00:08:25,211 --> 00:08:29,155
I am just going to place a break point on
this line of code,

102
00:08:29,155 --> 00:08:34,270
then I can press the F8 key, which is the
same as this one to zoom through.

103
00:08:37,660 --> 00:08:42,400
So we can see b, which is our inner loop,
has been processed ten times again

104
00:08:45,600 --> 00:08:52,639
and see, it gets incremented to 20 and so
on.

105
00:08:52,639 --> 00:08:55,920
I'll just press F8, and keep pressing it,
and

106
00:08:58,010 --> 00:09:03,860
we can see our outer loop is going to be
processed 15 times.

107
00:09:05,130 --> 00:09:05,860
There we go.

108
00:09:07,600 --> 00:09:10,870
And do, to the bottom.

109
00:09:13,270 --> 00:09:16,380
And then C gets incremented with the value
of A.

110
00:09:19,800 --> 00:09:21,800
And we write out the final value of C.

111
00:09:21,800 --> 00:09:25,260
So we can see our outer loop and

112
00:09:25,260 --> 00:09:31,060
the inner loop values outer loop again,
inner loop, and so on.

113
00:09:31,060 --> 00:09:36,610
As we scroll down to the bottom we finally
get the total number of

114
00:09:36,610 --> 00:09:41,390
loops that have been performed in our
code.

115
00:09:41,390 --> 00:09:46,010
It might've been a little bit better if I
was just to, maybe

116
00:09:46,010 --> 00:09:49,530
increase the number of positions from the
left-hand margin of the inner loop print.

117
00:09:49,530 --> 00:09:51,410
I'll double click the breakpoint to

118
00:09:56,300 --> 00:09:59,563
get rid of it, and then zoom through the
code.

119
00:09:59,563 --> 00:10:03,420
There we go.

120
00:10:03,420 --> 00:10:05,979
[BLANK_AUDIO]

121
00:10:07,412 --> 00:10:08,003
That's easy.

122
00:10:08,003 --> 00:10:10,480
It's a read.

123
00:10:10,480 --> 00:10:11,920
There we go.
So, that's nesting do loops.

