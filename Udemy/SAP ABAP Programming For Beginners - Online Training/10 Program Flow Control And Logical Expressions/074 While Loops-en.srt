1
00:00:01,270 --> 00:00:03,890
We're now going to take a look at another
looping statement,

2
00:00:03,890 --> 00:00:06,820
and this one is the while loop.

3
00:00:08,570 --> 00:00:14,120
Now, this differs from the do loop, and
that the while loop checks for a condition

4
00:00:14,120 --> 00:00:18,961
that we have defined within the while loop
before it executes any code.

5
00:00:18,961 --> 00:00:22,217
All the statements between the while and

6
00:00:22,217 --> 00:00:27,878
end while statements will be repeated as
long as the condition is met.

7
00:00:27,878 --> 00:00:31,530
As soon as the condition is untrue, the
loop will terminate.

8
00:00:33,210 --> 00:00:38,253
Just as we did with the do loop, we also
monitored the sy-index

9
00:00:38,253 --> 00:00:42,170
field to see how many times the loop is
executed.

10
00:00:42,170 --> 00:00:45,948
So, let's get straight in and have a look
at the code.

11
00:00:45,948 --> 00:00:52,671
[BLANK_AUDIO]

12
00:00:52,671 --> 00:00:55,870
Let's introduce a few blank lines, then
what I'm going to do,

13
00:00:57,290 --> 00:01:00,711
[BLANK_AUDIO]

14
00:01:00,711 --> 00:01:05,996
we just comment this out because we don't
want all these few loop output

15
00:01:05,996 --> 00:01:11,045
on to the screen, and then we'll take a
look at the syntax for the while.

16
00:01:11,045 --> 00:01:13,461
[SOUND] So, it's quite straightforward.

17
00:01:13,461 --> 00:01:18,920
We have a while, then we have a statement
which is our condition statement.

18
00:01:18,920 --> 00:01:23,128
So, let's do that, condition statement.

19
00:01:23,128 --> 00:01:27,921
[SOUND] Then, we have a block of code that
we would execute.

20
00:01:27,921 --> 00:01:32,771
[SOUND] And then, we end our end

21
00:01:32,771 --> 00:01:37,628
while loop, with end while.

22
00:01:37,628 --> 00:01:41,003
[SOUND] Pretty straightforward.

23
00:01:41,003 --> 00:01:43,165
Looks quite similar to the do statement.

24
00:01:44,620 --> 00:01:48,170
So, let's turn this into a proper code.

25
00:01:48,170 --> 00:01:49,940
So, we have our while statement and

26
00:01:49,940 --> 00:01:53,253
we would change this conditional statement
to something proper.

27
00:01:53,253 --> 00:02:00,920
So, we can say while a is not equal to 15.

28
00:02:00,920 --> 00:02:06,503
[SOUND] Let's copy this.

29
00:02:06,503 --> 00:02:13,220
[SOUND] Well, it's not equal to 15.

30
00:02:13,220 --> 00:02:20,086
We can output, [SOUND] the value of a.

31
00:02:20,086 --> 00:02:22,867
Now, at the moment, a will always be less

32
00:02:22,867 --> 00:02:27,570
than 15 because we are initializing a a
little higher up in the code.

33
00:02:28,780 --> 00:02:33,742
So, what we need to do, after we write out
the value of a to ensure we don't

34
00:02:33,742 --> 00:02:37,920
end up in an endless loop, we need to
increment the value of a.

35
00:02:37,920 --> 00:02:43,545
So, we'll just do the simple a equals a
plus one.

36
00:02:43,545 --> 00:02:45,211
Tidy our code up.

37
00:02:45,211 --> 00:02:50,547
[BLANK_AUDIO]

38
00:02:50,547 --> 00:02:52,003
[SOUND] Execute it.

39
00:02:52,003 --> 00:02:53,878
[BLANK_AUDIO]

40
00:02:53,878 --> 00:02:58,920
And, we can step through the code.

41
00:02:58,920 --> 00:03:05,378
So, we will monitor the value of a, and
also [SOUND] sy-index.

42
00:03:05,378 --> 00:03:07,211
[BLANK_AUDIO]

43
00:03:07,211 --> 00:03:10,380
And as we step through the while loop, it
will check the condition.

44
00:03:10,380 --> 00:03:15,003
And as we can see, the value of a is zero.

45
00:03:15,003 --> 00:03:18,961
So, we write out the statement to the
screen,

46
00:03:18,961 --> 00:03:23,338
then a gets incremented, and the loop
continues.

47
00:03:23,338 --> 00:03:28,240
And notice our sy-index is incrementing
just as it did when we

48
00:03:28,240 --> 00:03:30,795
took a look at the do statement.

49
00:03:30,795 --> 00:03:33,587
[BLANK_AUDIO]

50
00:03:33,587 --> 00:03:38,228
So, I just keep my finger on the button
here to step through,

51
00:03:38,228 --> 00:03:44,336
until we get close to 15, which we're
right at right now, so do it end while.

52
00:03:44,336 --> 00:03:45,753
Checks the condition.

53
00:03:45,753 --> 00:03:49,540
[BLANK_AUDIO]

54
00:03:49,540 --> 00:03:55,461
Skips the statement block and goes to the
end of the loop.

55
00:03:55,461 --> 00:03:58,336
And then, outputs everything to the
screen.

56
00:03:58,336 --> 00:04:03,254
Now, because a started with a value of
zero, that was the first cycle.

57
00:04:03,254 --> 00:04:07,754
So, the maximum value a reach when it was
output on the screen was 14.

58
00:04:07,754 --> 00:04:12,878
[BLANK_AUDIO]

59
00:04:12,878 --> 00:04:15,893
[SOUND] So, what we could've done, just to
get 15,

60
00:04:15,893 --> 00:04:19,046
is just what these statements around, just
hide that.

61
00:04:19,046 --> 00:04:21,586
So, a gets incremented first.

62
00:04:21,586 --> 00:04:26,118
[SOUND] I'll press F8,

63
00:04:26,118 --> 00:04:29,295
and there we go.

64
00:04:29,295 --> 00:04:30,836
So, there we have the 15.

65
00:04:30,836 --> 00:04:33,628
It looks a little bit easier on the eye.

66
00:04:33,628 --> 00:04:35,930
So that's it, a very simple while loop.

