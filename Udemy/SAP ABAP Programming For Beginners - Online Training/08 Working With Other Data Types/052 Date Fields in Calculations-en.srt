1
00:00:02,240 --> 00:00:04,940
Now that we've seen how to declare date
and time fields,

2
00:00:06,040 --> 00:00:09,900
let's perform some example calculations
with them, to show how they can be used.

3
00:00:09,900 --> 00:00:13,970
Now, you probably know that using date and

4
00:00:13,970 --> 00:00:20,210
time fields within calculations is common
practice in programming business systems,

5
00:00:20,210 --> 00:00:23,600
because you often have to determine
differences between two dates.

6
00:00:24,740 --> 00:00:26,760
Generating dates such as invoice dates,

7
00:00:26,760 --> 00:00:29,830
delivery dates, salary payment dates, and
so on.

8
00:00:31,470 --> 00:00:34,840
So let's go through some examples of how
we can use dates within calculations

9
00:00:35,940 --> 00:00:39,600
to both generate new dates, and find out
the difference between dates.

10
00:00:40,890 --> 00:00:46,628
So first of all, let's tidy up this
program a little bit.

11
00:00:46,628 --> 00:00:52,878
[BLANK_AUDIO]

12
00:00:52,878 --> 00:00:53,628
Okay.

13
00:00:53,628 --> 00:00:59,461
So what we're gonna do is define an
employee date.

14
00:00:59,461 --> 00:01:00,878
Still tidying up.

15
00:01:00,878 --> 00:01:06,209
[LAUGH] Okay, so we'll

16
00:01:06,209 --> 00:01:12,102
use the data statement,

17
00:01:12,102 --> 00:01:17,995
and we'll define a start

18
00:01:17,995 --> 00:01:23,336
date for an employee.

19
00:01:23,336 --> 00:01:27,795
See, what, let's not assign a value
straightaway, we'll do that in the code.

20
00:01:27,795 --> 00:01:31,754
So there we have

21
00:01:31,754 --> 00:01:37,545
the data statements.

22
00:01:37,545 --> 00:01:41,920
And we will assign a value to the
variable.

23
00:01:41,920 --> 00:01:47,711
[BLANK_AUDIO]

24
00:01:47,711 --> 00:01:53,003
A start date of May the 15th, 2009.

25
00:01:53,003 --> 00:01:56,290
And remember, date fields are character
fields.

26
00:01:56,290 --> 00:01:58,850
So, we have to enclose the dates in single
quotes.

27
00:02:00,540 --> 00:02:01,490
Now let's define another field.

28
00:02:01,490 --> 00:02:11,010
I'm gonna call this one today's date.

29
00:02:11,010 --> 00:02:16,619
And for today's date,

30
00:02:16,619 --> 00:02:21,948
we're going to assign

31
00:02:21,948 --> 00:02:27,280
the system variable.

32
00:02:30,940 --> 00:02:35,230
To pick up the date of the system right
now, we will then

33
00:02:35,230 --> 00:02:39,520
add a calculation to determine the length
of service for this employee.

34
00:02:40,590 --> 00:02:46,323
So we will create a new variable called
LOS.

35
00:02:46,323 --> 00:02:54,609
[BLANK]Together with

36
00:02:54,609 --> 00:03:02,503
a simple calculation.

37
00:03:02,503 --> 00:03:08,060
And I must remember to add in length of
service.

38
00:03:10,014 --> 00:03:11,878
We'll make it an integer.

39
00:03:11,878 --> 00:03:21,878
[BLANK_AUDIO]

40
00:03:24,003 --> 00:03:25,240
And the last action.

41
00:03:25,240 --> 00:03:28,128
We will just write out length of service.

42
00:03:28,128 --> 00:03:38,128
[BLANK_AUDIO]

43
00:03:44,295 --> 00:03:46,253
Okay, it looks pretty straightforward.

44
00:03:46,253 --> 00:03:47,820
Let's just execute the code.

45
00:03:50,810 --> 00:03:56,721
So as we can see, the length of the
service is 1,160 days.

46
00:03:56,721 --> 00:04:00,590
So the calculation has given us length of
service in the number of days.

47
00:04:02,490 --> 00:04:08,086
Let's do another example where we want to
add 20 days to today's dates.

48
00:04:08,086 --> 00:04:17,045
[BLANK_AUDIO]

49
00:04:17,045 --> 00:04:18,670
So it's quite simple.

50
00:04:18,670 --> 00:04:23,128
[BLANK]Let's just copy some code.

51
00:04:23,128 --> 00:04:26,698
We will use the same today's dates
variable, and

52
00:04:26,698 --> 00:04:29,253
assign it to the system date again.

53
00:04:29,253 --> 00:04:35,613
We'll print a new variable called days
count,

54
00:04:35,613 --> 00:04:40,545
and we'll assign it a value of 20.

55
00:04:40,545 --> 00:04:46,503
Don't know why I'm using quotes, it's
going to be an integer.

56
00:04:46,503 --> 00:04:49,128
And we'll create a new variable called
future date.

57
00:04:49,128 --> 00:04:55,045
[BLANK_AUDIO]

58
00:04:55,045 --> 00:04:55,753
Oops.

59
00:04:55,753 --> 00:05:03,670
[BLANK_AUDIO]

60
00:05:03,670 --> 00:05:09,931
Which will tell the calculation of today's
date plus,

61
00:05:09,931 --> 00:05:17,003
the day count variable, which will contain
the value of 20.

62
00:05:17,003 --> 00:05:24,378
And then we can write out the future date.

63
00:05:24,378 --> 00:05:29,932
Let's go

64
00:05:29,932 --> 00:05:36,180
out to data

65
00:05:36,180 --> 00:05:43,855
variables.

66
00:05:43,855 --> 00:05:50,137
[BLANK]Have I made

67
00:05:50,137 --> 00:05:56,420
a spelling mistake?

68
00:05:56,420 --> 00:05:59,961
Oh dear, am I going blind?

69
00:05:59,961 --> 00:06:00,711
Here we go.

70
00:06:00,711 --> 00:06:08,170
[LAUGH] Oh dear, look at this.

71
00:06:08,170 --> 00:06:09,378
I can't type.

72
00:06:09,378 --> 00:06:10,530
I do apologize for this.

73
00:06:12,370 --> 00:06:13,310
There we go, that's better.

74
00:06:16,820 --> 00:06:22,900
So now, we should have 20 days added to
today's date, and see the output.

75
00:06:24,980 --> 00:06:26,230
Here we go.

76
00:06:26,230 --> 00:06:30,790
So 20 days on from today, will be the 7th
of August, 2012.

77
00:06:30,790 --> 00:06:35,230
If you remember, in a previous module,

78
00:06:35,230 --> 00:06:38,510
we worked with sub-fields.

79
00:06:38,510 --> 00:06:43,250
Well, all the same logic applies when
working with sub-fields that are based

80
00:06:43,250 --> 00:06:44,370
on date and time fields.

81
00:06:45,830 --> 00:06:50,160
So let's create an example to change one
of our date fields to represent the 20th

82
00:06:51,250 --> 00:06:52,710
of the current month.

83
00:06:52,710 --> 00:06:58,310
So again I'll copy some code.

84
00:06:58,310 --> 00:07:03,653
We will leave today's date

85
00:07:03,653 --> 00:07:09,004
equaling the system date.

86
00:07:09,004 --> 00:07:13,629
[BLANK_AUDIO]

87
00:07:13,629 --> 00:07:21,050
What we will do, is make the day sub-field
a valid date equal to 20.

88
00:07:21,050 --> 00:07:26,753
Now currently it's the 18th of July, so
the system date we'll do the 18th

89
00:07:26,753 --> 00:07:33,260
[BLANK_AUDIO]

90
00:07:33,260 --> 00:07:38,170
We can update the last two characters of
our date field with the value of 20.

91
00:07:38,170 --> 00:07:41,170
[BLANK_AUDIO]

92
00:07:41,170 --> 00:07:46,153
And what I'll do, just to save our, save
on a tiny piece of processing

93
00:07:46,153 --> 00:07:51,305
is include the value 20 in quotes, to make
it represent a string rather

94
00:07:51,305 --> 00:07:55,961
than an integer, and all we need to do is
write out today's date.

95
00:07:55,961 --> 00:08:05,961
[BLANK_AUDIO]

96
00:08:10,628 --> 00:08:12,046
My apologies.

97
00:08:12,046 --> 00:08:17,920
[BLANK_AUDIO]

98
00:08:17,920 --> 00:08:19,545
Oops, tiny error.

99
00:08:19,545 --> 00:08:20,878
Let me just correct that.

100
00:08:20,878 --> 00:08:26,503
[BLANK_AUDIO]

101
00:08:26,503 --> 00:08:29,628
There we go.

102
00:08:29,628 --> 00:08:33,711
And we'll test the program.

103
00:08:33,711 --> 00:08:39,086
And as you can see, the output now says
the 20 July, 2012.

104
00:08:39,086 --> 00:08:48,003
[BLANK_AUDIO]

105
00:08:48,003 --> 00:08:54,086
For completeness let's just output the
system date as well.

106
00:08:54,086 --> 00:08:58,578
So the system date is the 18th of July,

107
00:08:58,578 --> 00:09:02,420
and our output date is the 20th.

108
00:09:02,420 --> 00:09:07,882
Now in our last example, in this section,

109
00:09:07,882 --> 00:09:16,545
we will show how we can determine the last
day of the previous month.

110
00:09:16,545 --> 00:09:20,750
So again, let's be super lazy, copy and

111
00:09:20,750 --> 00:09:24,355
paste, delete today's date, and

112
00:09:24,355 --> 00:09:29,420
what we're gonna do, is set the day to the
first.

113
00:09:29,420 --> 00:09:34,295
Then we're going to show how we can
subtract a value from today's date.

114
00:09:34,295 --> 00:09:44,295
[BLANK_AUDIO]

115
00:09:47,046 --> 00:09:50,128
We'll subtract the value of one.

116
00:09:50,128 --> 00:09:53,378
So today is the 18th of July.

117
00:09:53,378 --> 00:09:57,239
So then, this row of code here,

118
00:09:57,239 --> 00:10:02,387
will make our date equal the 1st of July
and

119
00:10:02,387 --> 00:10:09,680
then when we take the value of one away,
which means one day,

120
00:10:09,680 --> 00:10:14,711
we should end up with the last day of
June.

121
00:10:14,711 --> 00:10:19,586
Let's stick an underline in the last
section.

122
00:10:19,586 --> 00:10:24,670
Pretty it up, check it, and then test.

123
00:10:26,860 --> 00:10:30,250
Now we can see, we found the last day of
the previous month.

