1
00:00:01,680 --> 00:00:07,570
So as a reminder, we've just done the
initialization section and

2
00:00:07,570 --> 00:00:10,340
we'll now have a look at this at selection
screen event.

3
00:00:10,340 --> 00:00:14,988
And remember I said this event is
triggered when

4
00:00:14,988 --> 00:00:18,713
the user tries to execute the report.

5
00:00:18,713 --> 00:00:22,115
The selection screen process that says,

6
00:00:22,115 --> 00:00:26,584
hey if your program has an out selection
screen event,

7
00:00:26,584 --> 00:00:32,628
let's execute that code before we go on to
the report processing itself.

8
00:00:32,628 --> 00:00:37,900
So in our example, the at selection screen
is the ideal place for

9
00:00:37,900 --> 00:00:42,585
us to check what value the user entered
into the screen for

10
00:00:42,585 --> 00:00:45,820
the employee number selection field.

11
00:00:46,970 --> 00:00:49,730
Now we haven't defined it yet, don't
worry, we will come to that,

12
00:00:49,730 --> 00:00:52,180
but I'm just saying, you know, what,

13
00:00:52,180 --> 00:00:57,820
what we're gonna do is write a logic to
check the value the user entered.

14
00:00:57,820 --> 00:01:03,110
If it's incorrect, or, if it doesn't meet
the criteria we're checking against, we

15
00:01:03,110 --> 00:01:07,570
can display a message on the screen to the
user, to tell them to correct that entry.

16
00:01:09,410 --> 00:01:13,190
Now, the first thing I'm going to do is
add the parameter statement.

17
00:01:14,430 --> 00:01:18,440
I'm not going to explain what the
parameter statement is right now.

18
00:01:18,440 --> 00:01:20,930
That will come along in a few minutes'
time.

19
00:01:20,930 --> 00:01:25,193
I just want to put it in there and all you
need to know is that's how we declare

20
00:01:25,193 --> 00:01:27,712
a parameter that will appear on the
screen.

21
00:01:27,712 --> 00:01:31,420
[BLANK_AUDIO]

22
00:01:31,420 --> 00:01:36,260
So I use parameters and, well I might as
well talk,

23
00:01:36,260 --> 00:01:39,085
talk about it as I'm typing.

24
00:01:40,655 --> 00:01:44,003
It's very much like the data statement.

25
00:01:44,003 --> 00:01:48,982
I'm going to declare it a brand new
variable

26
00:01:48,982 --> 00:01:53,963
called my_ee for employee and I'm going to

27
00:01:53,963 --> 00:01:59,086
make it like the employee field in our
table.

28
00:01:59,086 --> 00:02:00,628
[BLANK_AUDIO]

29
00:02:00,628 --> 00:02:03,702
Now, we'll get down to writing the at
selection screen event.

30
00:02:03,702 --> 00:02:09,170
So, below our initialization section,
let's type at selection screen.

31
00:02:09,170 --> 00:02:13,545
[BLANK_AUDIO]

32
00:02:13,545 --> 00:02:16,586
And I'm going to use an addition here
called, on.

33
00:02:16,586 --> 00:02:21,963
[BLANK_AUDIO]
And then the parameter.

34
00:02:21,963 --> 00:02:25,396
So that indicates to the system,

35
00:02:25,396 --> 00:02:30,669
this at selection screen event is
specifically for

36
00:02:30,669 --> 00:02:35,336
this parameter field that we've declared.

37
00:02:35,336 --> 00:02:39,986
And this is where I'd want to you know,

38
00:02:39,986 --> 00:02:45,190
check to make sure the employee number.

39
00:02:45,190 --> 00:02:49,170
[BLANK_AUDIO]

40
00:02:49,170 --> 00:02:50,670
These are not greater.

41
00:02:50,670 --> 00:02:55,461
[BLANK_AUDIO]

42
00:02:55,461 --> 00:02:58,711
Than the last employee number in our
table.

43
00:02:58,711 --> 00:03:04,420
[BLANK_AUDIO]

44
00:03:04,420 --> 00:03:07,420
So, I can do that with a simple if
statement.

45
00:03:07,420 --> 00:03:17,420
[BLANK_AUDIO]

46
00:03:21,586 --> 00:03:25,336
And this is where we would display a
message to the user.

47
00:03:25,336 --> 00:03:29,649
The entry you would put into the field is
greater than the maximum employee number

48
00:03:29,649 --> 00:03:30,420
in the table.

49
00:03:30,420 --> 00:03:35,128
And then we would finish it off with the
end if statement.

50
00:03:35,128 --> 00:03:38,690
[BLANK_AUDIO]

51
00:03:38,690 --> 00:03:40,836
We will fill in these pieces shortly.

52
00:03:40,836 --> 00:03:42,045
[BLANK_AUDIO]

53
00:03:42,045 --> 00:03:45,336
But for now, that's really the
pseudo-logic.

54
00:03:45,336 --> 00:03:50,166
So because we store the last employee
number in memory,

55
00:03:50,166 --> 00:03:55,611
we can then check with the at selection
screen event to make sure

56
00:03:55,611 --> 00:04:02,003
the user has not entered a value greater
than our stored employee number.

57
00:04:02,003 --> 00:04:05,346
If they have, we're gonna display a
message, and

58
00:04:05,346 --> 00:04:10,503
that will present the screen to the user
again for them to re-enter the value.

59
00:04:10,503 --> 00:04:13,003
Now you'll be able to see by the coding
here.

60
00:04:13,003 --> 00:04:19,182
Remember Ilia mentioned that these event
blocks end implicitly,

61
00:04:19,182 --> 00:04:24,378
meaning they end only when another event
block starts.

62
00:04:24,378 --> 00:04:26,211
So this is an example of that.

63
00:04:26,211 --> 00:04:30,782
The initialization section finishes when
we start

64
00:04:30,782 --> 00:04:35,050
the at selection screen on my employee
events.

65
00:04:35,050 --> 00:04:38,830
And this one will finish when we create a
brand new event below it.

